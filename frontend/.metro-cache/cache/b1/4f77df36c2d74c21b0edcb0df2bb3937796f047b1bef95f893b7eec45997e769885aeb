{"dependencies":[{"name":"zustand","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":61},"end":{"line":2,"column":33,"index":94}}],"key":"POPvx7yS3Y3wz+S/9OAefiXNs0Q=","exportNames":["*"],"imports":1}},{"name":"@react-native-async-storage/async-storage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":95},"end":{"line":3,"column":69,"index":164}}],"key":"0kSRlooyBOaYM9tlTtK91nq+uds=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useUserStore\", {\n    enumerable: true,\n    get: function () {\n      return useUserStore;\n    }\n  });\n  var _zustand = require(_dependencyMap[0], \"zustand\");\n  var _reactNativeAsyncStorageAsyncStorage = require(_dependencyMap[1], \"@react-native-async-storage/async-storage\");\n  var AsyncStorage = _interopDefault(_reactNativeAsyncStorageAsyncStorage);\n  // State management using Zustand for user progress tracking\n\n  const STORAGE_KEY = '@memorial_gherla_progress';\n  const useUserStore = (0, _zustand.create)((set, get) => ({\n    visitedPrisons: [],\n    scannedQRs: [],\n    readDocuments: [],\n    listenedTestimonies: [],\n    badges: [],\n    addVisitedPrison: prisonId => {\n      set(state => {\n        if (state.visitedPrisons.includes(prisonId)) return state;\n        const newState = {\n          visitedPrisons: [...state.visitedPrisons, prisonId]\n        };\n        get().saveProgress();\n        return newState;\n      });\n    },\n    addScannedQR: qrId => {\n      set(state => {\n        if (state.scannedQRs.includes(qrId)) return state;\n        const newState = {\n          scannedQRs: [...state.scannedQRs, qrId]\n        };\n        get().saveProgress();\n        // Check for badge unlock\n        if (newState.scannedQRs.length >= 5 && !state.badges.includes('qr_master')) {\n          get().unlockBadge('qr_master');\n        }\n        return newState;\n      });\n    },\n    addReadDocument: docId => {\n      set(state => {\n        if (state.readDocuments.includes(docId)) return state;\n        const newState = {\n          readDocuments: [...state.readDocuments, docId]\n        };\n        get().saveProgress();\n        // Check for badge unlock\n        if (newState.readDocuments.length >= 10 && !state.badges.includes('scholar')) {\n          get().unlockBadge('scholar');\n        }\n        return newState;\n      });\n    },\n    addListenedTestimony: testimonyId => {\n      set(state => {\n        if (state.listenedTestimonies.includes(testimonyId)) return state;\n        const newState = {\n          listenedTestimonies: [...state.listenedTestimonies, testimonyId]\n        };\n        get().saveProgress();\n        return newState;\n      });\n    },\n    unlockBadge: badgeId => {\n      set(state => {\n        if (state.badges.includes(badgeId)) return state;\n        const newState = {\n          badges: [...state.badges, badgeId]\n        };\n        get().saveProgress();\n        return newState;\n      });\n    },\n    loadProgress: async () => {\n      try {\n        const stored = await AsyncStorage.default.getItem(STORAGE_KEY);\n        if (stored) {\n          const progress = JSON.parse(stored);\n          set(progress);\n        }\n      } catch (error) {\n        console.error('Failed to load progress:', error);\n      }\n    },\n    saveProgress: async () => {\n      try {\n        const state = get();\n        const progress = {\n          visitedPrisons: state.visitedPrisons,\n          scannedQRs: state.scannedQRs,\n          readDocuments: state.readDocuments,\n          listenedTestimonies: state.listenedTestimonies,\n          badges: state.badges\n        };\n        await AsyncStorage.default.setItem(STORAGE_KEY, JSON.stringify(progress));\n      } catch (error) {\n        console.error('Failed to save progress:', error);\n      }\n    }\n  }));\n});","lineCount":115,"map":[[12,2,25,0,"Object"],[12,8,25,0],[12,9,25,0,"defineProperty"],[12,23,25,0],[12,24,25,0,"exports"],[12,31,25,0],[13,4,25,0,"enumerable"],[13,14,25,0],[14,4,25,0,"get"],[14,7,25,0],[14,18,25,0,"get"],[14,19,25,0],[15,6,25,0],[15,13,25,0,"useUserStore"],[15,25,25,0],[16,4,25,0],[17,2,25,0],[18,2,2,0],[18,6,2,0,"_zustand"],[18,14,2,0],[18,17,2,0,"require"],[18,24,2,0],[18,25,2,0,"_dependencyMap"],[18,39,2,0],[19,2,3,0],[19,6,3,0,"_reactNativeAsyncStorageAsyncStorage"],[19,42,3,0],[19,45,3,0,"require"],[19,52,3,0],[19,53,3,0,"_dependencyMap"],[19,67,3,0],[20,2,3,0],[20,6,3,0,"AsyncStorage"],[20,18,3,0],[20,21,3,0,"_interopDefault"],[20,36,3,0],[20,37,3,0,"_reactNativeAsyncStorageAsyncStorage"],[20,73,3,0],[21,2,1,0],[23,2,23,0],[23,8,23,6,"STORAGE_KEY"],[23,19,23,17],[23,22,23,20],[23,49,23,47],[24,2,25,7],[24,8,25,13,"useUserStore"],[24,20,25,25],[24,23,25,28],[24,27,25,28,"create"],[24,35,25,34],[24,36,25,34,"create"],[24,42,25,34],[24,44,25,46],[24,45,25,47,"set"],[24,48,25,50],[24,50,25,52,"get"],[24,53,25,55],[24,59,25,61],[25,4,26,2,"visitedPrisons"],[25,18,26,16],[25,20,26,18],[25,22,26,20],[26,4,27,2,"scannedQRs"],[26,14,27,12],[26,16,27,14],[26,18,27,16],[27,4,28,2,"readDocuments"],[27,17,28,15],[27,19,28,17],[27,21,28,19],[28,4,29,2,"listenedTestimonies"],[28,23,29,21],[28,25,29,23],[28,27,29,25],[29,4,30,2,"badges"],[29,10,30,8],[29,12,30,10],[29,14,30,12],[30,4,32,2,"addVisitedPrison"],[30,20,32,18],[30,22,32,21,"prisonId"],[30,30,32,37],[30,34,32,42],[31,6,33,4,"set"],[31,9,33,7],[31,10,33,9,"state"],[31,15,33,14],[31,19,33,19],[32,8,34,6],[32,12,34,10,"state"],[32,17,34,15],[32,18,34,16,"visitedPrisons"],[32,32,34,30],[32,33,34,31,"includes"],[32,41,34,39],[32,42,34,40,"prisonId"],[32,50,34,48],[32,51,34,49],[32,53,34,51],[32,60,34,58,"state"],[32,65,34,63],[33,8,35,6],[33,14,35,12,"newState"],[33,22,35,20],[33,25,35,23],[34,10,36,8,"visitedPrisons"],[34,24,36,22],[34,26,36,24],[34,27,36,25],[34,30,36,28,"state"],[34,35,36,33],[34,36,36,34,"visitedPrisons"],[34,50,36,48],[34,52,36,50,"prisonId"],[34,60,36,58],[35,8,37,6],[35,9,37,7],[36,8,38,6,"get"],[36,11,38,9],[36,12,38,10],[36,13,38,11],[36,14,38,12,"saveProgress"],[36,26,38,24],[36,27,38,25],[36,28,38,26],[37,8,39,6],[37,15,39,13,"newState"],[37,23,39,21],[38,6,40,4],[38,7,40,5],[38,8,40,6],[39,4,41,2],[39,5,41,3],[40,4,43,2,"addScannedQR"],[40,16,43,14],[40,18,43,17,"qrId"],[40,22,43,29],[40,26,43,34],[41,6,44,4,"set"],[41,9,44,7],[41,10,44,9,"state"],[41,15,44,14],[41,19,44,19],[42,8,45,6],[42,12,45,10,"state"],[42,17,45,15],[42,18,45,16,"scannedQRs"],[42,28,45,26],[42,29,45,27,"includes"],[42,37,45,35],[42,38,45,36,"qrId"],[42,42,45,40],[42,43,45,41],[42,45,45,43],[42,52,45,50,"state"],[42,57,45,55],[43,8,46,6],[43,14,46,12,"newState"],[43,22,46,20],[43,25,46,23],[44,10,47,8,"scannedQRs"],[44,20,47,18],[44,22,47,20],[44,23,47,21],[44,26,47,24,"state"],[44,31,47,29],[44,32,47,30,"scannedQRs"],[44,42,47,40],[44,44,47,42,"qrId"],[44,48,47,46],[45,8,48,6],[45,9,48,7],[46,8,49,6,"get"],[46,11,49,9],[46,12,49,10],[46,13,49,11],[46,14,49,12,"saveProgress"],[46,26,49,24],[46,27,49,25],[46,28,49,26],[47,8,50,6],[48,8,51,6],[48,12,51,10,"newState"],[48,20,51,18],[48,21,51,19,"scannedQRs"],[48,31,51,29],[48,32,51,30,"length"],[48,38,51,36],[48,42,51,40],[48,43,51,41],[48,47,51,45],[48,48,51,46,"state"],[48,53,51,51],[48,54,51,52,"badges"],[48,60,51,58],[48,61,51,59,"includes"],[48,69,51,67],[48,70,51,68],[48,81,51,79],[48,82,51,80],[48,84,51,82],[49,10,52,8,"get"],[49,13,52,11],[49,14,52,12],[49,15,52,13],[49,16,52,14,"unlockBadge"],[49,27,52,25],[49,28,52,26],[49,39,52,37],[49,40,52,38],[50,8,53,6],[51,8,54,6],[51,15,54,13,"newState"],[51,23,54,21],[52,6,55,4],[52,7,55,5],[52,8,55,6],[53,4,56,2],[53,5,56,3],[54,4,58,2,"addReadDocument"],[54,19,58,17],[54,21,58,20,"docId"],[54,26,58,33],[54,30,58,38],[55,6,59,4,"set"],[55,9,59,7],[55,10,59,9,"state"],[55,15,59,14],[55,19,59,19],[56,8,60,6],[56,12,60,10,"state"],[56,17,60,15],[56,18,60,16,"readDocuments"],[56,31,60,29],[56,32,60,30,"includes"],[56,40,60,38],[56,41,60,39,"docId"],[56,46,60,44],[56,47,60,45],[56,49,60,47],[56,56,60,54,"state"],[56,61,60,59],[57,8,61,6],[57,14,61,12,"newState"],[57,22,61,20],[57,25,61,23],[58,10,62,8,"readDocuments"],[58,23,62,21],[58,25,62,23],[58,26,62,24],[58,29,62,27,"state"],[58,34,62,32],[58,35,62,33,"readDocuments"],[58,48,62,46],[58,50,62,48,"docId"],[58,55,62,53],[59,8,63,6],[59,9,63,7],[60,8,64,6,"get"],[60,11,64,9],[60,12,64,10],[60,13,64,11],[60,14,64,12,"saveProgress"],[60,26,64,24],[60,27,64,25],[60,28,64,26],[61,8,65,6],[62,8,66,6],[62,12,66,10,"newState"],[62,20,66,18],[62,21,66,19,"readDocuments"],[62,34,66,32],[62,35,66,33,"length"],[62,41,66,39],[62,45,66,43],[62,47,66,45],[62,51,66,49],[62,52,66,50,"state"],[62,57,66,55],[62,58,66,56,"badges"],[62,64,66,62],[62,65,66,63,"includes"],[62,73,66,71],[62,74,66,72],[62,83,66,81],[62,84,66,82],[62,86,66,84],[63,10,67,8,"get"],[63,13,67,11],[63,14,67,12],[63,15,67,13],[63,16,67,14,"unlockBadge"],[63,27,67,25],[63,28,67,26],[63,37,67,35],[63,38,67,36],[64,8,68,6],[65,8,69,6],[65,15,69,13,"newState"],[65,23,69,21],[66,6,70,4],[66,7,70,5],[66,8,70,6],[67,4,71,2],[67,5,71,3],[68,4,73,2,"addListenedTestimony"],[68,24,73,22],[68,26,73,25,"testimonyId"],[68,37,73,44],[68,41,73,49],[69,6,74,4,"set"],[69,9,74,7],[69,10,74,9,"state"],[69,15,74,14],[69,19,74,19],[70,8,75,6],[70,12,75,10,"state"],[70,17,75,15],[70,18,75,16,"listenedTestimonies"],[70,37,75,35],[70,38,75,36,"includes"],[70,46,75,44],[70,47,75,45,"testimonyId"],[70,58,75,56],[70,59,75,57],[70,61,75,59],[70,68,75,66,"state"],[70,73,75,71],[71,8,76,6],[71,14,76,12,"newState"],[71,22,76,20],[71,25,76,23],[72,10,77,8,"listenedTestimonies"],[72,29,77,27],[72,31,77,29],[72,32,77,30],[72,35,77,33,"state"],[72,40,77,38],[72,41,77,39,"listenedTestimonies"],[72,60,77,58],[72,62,77,60,"testimonyId"],[72,73,77,71],[73,8,78,6],[73,9,78,7],[74,8,79,6,"get"],[74,11,79,9],[74,12,79,10],[74,13,79,11],[74,14,79,12,"saveProgress"],[74,26,79,24],[74,27,79,25],[74,28,79,26],[75,8,80,6],[75,15,80,13,"newState"],[75,23,80,21],[76,6,81,4],[76,7,81,5],[76,8,81,6],[77,4,82,2],[77,5,82,3],[78,4,84,2,"unlockBadge"],[78,15,84,13],[78,17,84,16,"badgeId"],[78,24,84,31],[78,28,84,36],[79,6,85,4,"set"],[79,9,85,7],[79,10,85,9,"state"],[79,15,85,14],[79,19,85,19],[80,8,86,6],[80,12,86,10,"state"],[80,17,86,15],[80,18,86,16,"badges"],[80,24,86,22],[80,25,86,23,"includes"],[80,33,86,31],[80,34,86,32,"badgeId"],[80,41,86,39],[80,42,86,40],[80,44,86,42],[80,51,86,49,"state"],[80,56,86,54],[81,8,87,6],[81,14,87,12,"newState"],[81,22,87,20],[81,25,87,23],[82,10,88,8,"badges"],[82,16,88,14],[82,18,88,16],[82,19,88,17],[82,22,88,20,"state"],[82,27,88,25],[82,28,88,26,"badges"],[82,34,88,32],[82,36,88,34,"badgeId"],[82,43,88,41],[83,8,89,6],[83,9,89,7],[84,8,90,6,"get"],[84,11,90,9],[84,12,90,10],[84,13,90,11],[84,14,90,12,"saveProgress"],[84,26,90,24],[84,27,90,25],[84,28,90,26],[85,8,91,6],[85,15,91,13,"newState"],[85,23,91,21],[86,6,92,4],[86,7,92,5],[86,8,92,6],[87,4,93,2],[87,5,93,3],[88,4,95,2,"loadProgress"],[88,16,95,14],[88,18,95,16],[88,24,95,16,"loadProgress"],[88,25,95,16],[88,30,95,28],[89,6,96,4],[89,10,96,8],[90,8,97,6],[90,14,97,12,"stored"],[90,20,97,18],[90,23,97,21],[90,29,97,27,"AsyncStorage"],[90,41,97,39],[90,42,97,39,"default"],[90,49,97,39],[90,50,97,40,"getItem"],[90,57,97,47],[90,58,97,48,"STORAGE_KEY"],[90,69,97,59],[90,70,97,60],[91,8,98,6],[91,12,98,10,"stored"],[91,18,98,16],[91,20,98,18],[92,10,99,8],[92,16,99,14,"progress"],[92,24,99,22],[92,27,99,25,"JSON"],[92,31,99,29],[92,32,99,30,"parse"],[92,37,99,35],[92,38,99,36,"stored"],[92,44,99,42],[92,45,99,43],[93,10,100,8,"set"],[93,13,100,11],[93,14,100,12,"progress"],[93,22,100,20],[93,23,100,21],[94,8,101,6],[95,6,102,4],[95,7,102,5],[95,8,102,6],[95,15,102,13,"error"],[95,20,102,18],[95,22,102,20],[96,8,103,6,"console"],[96,15,103,13],[96,16,103,14,"error"],[96,21,103,19],[96,22,103,20],[96,48,103,46],[96,50,103,48,"error"],[96,55,103,53],[96,56,103,54],[97,6,104,4],[98,4,105,2],[98,5,105,3],[99,4,107,2,"saveProgress"],[99,16,107,14],[99,18,107,16],[99,24,107,16,"saveProgress"],[99,25,107,16],[99,30,107,28],[100,6,108,4],[100,10,108,8],[101,8,109,6],[101,14,109,12,"state"],[101,19,109,17],[101,22,109,20,"get"],[101,25,109,23],[101,26,109,24],[101,27,109,25],[102,8,110,6],[102,14,110,12,"progress"],[102,22,110,34],[102,25,110,37],[103,10,111,8,"visitedPrisons"],[103,24,111,22],[103,26,111,24,"state"],[103,31,111,29],[103,32,111,30,"visitedPrisons"],[103,46,111,44],[104,10,112,8,"scannedQRs"],[104,20,112,18],[104,22,112,20,"state"],[104,27,112,25],[104,28,112,26,"scannedQRs"],[104,38,112,36],[105,10,113,8,"readDocuments"],[105,23,113,21],[105,25,113,23,"state"],[105,30,113,28],[105,31,113,29,"readDocuments"],[105,44,113,42],[106,10,114,8,"listenedTestimonies"],[106,29,114,27],[106,31,114,29,"state"],[106,36,114,34],[106,37,114,35,"listenedTestimonies"],[106,56,114,54],[107,10,115,8,"badges"],[107,16,115,14],[107,18,115,16,"state"],[107,23,115,21],[107,24,115,22,"badges"],[108,8,116,6],[108,9,116,7],[109,8,117,6],[109,14,117,12,"AsyncStorage"],[109,26,117,24],[109,27,117,24,"default"],[109,34,117,24],[109,35,117,25,"setItem"],[109,42,117,32],[109,43,117,33,"STORAGE_KEY"],[109,54,117,44],[109,56,117,46,"JSON"],[109,60,117,50],[109,61,117,51,"stringify"],[109,70,117,60],[109,71,117,61,"progress"],[109,79,117,69],[109,80,117,70],[109,81,117,71],[110,6,118,4],[110,7,118,5],[110,8,118,6],[110,15,118,13,"error"],[110,20,118,18],[110,22,118,20],[111,8,119,6,"console"],[111,15,119,13],[111,16,119,14,"error"],[111,21,119,19],[111,22,119,20],[111,48,119,46],[111,50,119,48,"error"],[111,55,119,53],[111,56,119,54],[112,6,120,4],[113,4,121,2],[114,2,122,0],[114,3,122,1],[114,4,122,2],[114,5,122,3],[115,0,122,4],[115,3]],"functionMap":{"names":["<global>","create$argument_0","addVisitedPrison","set$argument_0","addScannedQR","addReadDocument","addListenedTestimony","unlockBadge","loadProgress","saveProgress"],"mappings":"AAA;8CCwB;oBCO;QCC;KDO;GDC;gBGE;QDC;KCW;GHC;mBIE;QFC;KEW;GJC;wBKE;QHC;KGO;GLC;eME;QJC;KIO;GNC;gBOE;GPU;gBQE;GRc;EDC"},"hasCjsExports":false},"type":"js/module"}]}