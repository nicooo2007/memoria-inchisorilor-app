{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  exports.calculateDistance = calculateDistance;\n  exports.formatDistance = formatDistance;\n  exports.formatDate = formatDate;\n  exports.formatDateTime = formatDateTime;\n  exports.truncateText = truncateText;\n  exports.generateShareText = generateShareText;\n  exports.isValidQRFormat = isValidQRFormat;\n  exports.calculateYears = calculateYears;\n  exports.formatNumber = formatNumber;\n  exports.getPeriodLabel = getPeriodLabel;\n  // Utility functions for Memorial Gherla App\n\n  /**\n   * Calculate distance between two coordinates in kilometers\n   */\n  function calculateDistance(lat1, lon1, lat2, lon2) {\n    const R = 6371; // Radius of the Earth in km\n    const dLat = toRad(lat2 - lat1);\n    const dLon = toRad(lon2 - lon1);\n    const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(toRad(lat1)) * Math.cos(toRad(lat2)) * Math.sin(dLon / 2) * Math.sin(dLon / 2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    return R * c;\n  }\n  function toRad(degrees) {\n    return degrees * (Math.PI / 180);\n  }\n\n  /**\n   * Format distance for display\n   */\n  function formatDistance(km) {\n    if (km < 1) {\n      return `${Math.round(km * 1000)} m`;\n    }\n    return `${km.toFixed(1)} km`;\n  }\n\n  /**\n   * Format date to Romanian format\n   */\n  function formatDate(date) {\n    const d = typeof date === 'string' ? new Date(date) : date;\n    return d.toLocaleDateString('ro-RO', {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    });\n  }\n\n  /**\n   * Format date with time\n   */\n  function formatDateTime(date) {\n    const d = typeof date === 'string' ? new Date(date) : date;\n    return d.toLocaleDateString('ro-RO', {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  }\n\n  /**\n   * Truncate text to specified length\n   */\n  function truncateText(text, maxLength) {\n    if (text.length <= maxLength) return text;\n    return text.substring(0, maxLength) + '...';\n  }\n\n  /**\n   * Generate shareable text for a prison\n   */\n  function generateShareText(prisonName, description) {\n    return `${prisonName}\\n\\n${truncateText(description, 200)}\\n\\nDescoperă mai multe în aplicația Memorial Gherla.`;\n  }\n\n  /**\n   * Validate QR code format\n   */\n  function isValidQRFormat(data) {\n    try {\n      const parsed = JSON.parse(data);\n      return parsed.type && parsed.prison_id;\n    } catch {\n      return false;\n    }\n  }\n\n  /**\n   * Calculate years between two dates\n   */\n  function calculateYears(startYear, endYear) {\n    if (!endYear) return new Date().getFullYear() - startYear;\n    return endYear - startYear;\n  }\n\n  /**\n   * Format number with thousands separator\n   */\n  function formatNumber(num) {\n    return num.toLocaleString('ro-RO');\n  }\n\n  /**\n   * Get period label (e.g., \"1945-1964\")\n   */\n  function getPeriodLabel(years) {\n    if (years.length === 0) return 'Unknown';\n    if (years.length === 1) return years[0].toString();\n    return `${years[0]}-${years[years.length - 1]}`;\n  }\n});","lineCount":120,"map":[[7,2,6,0,"exports"],[7,9,6,0],[7,10,6,0,"calculateDistance"],[7,27,6,0],[7,30,6,0,"calculateDistance"],[7,47,6,0],[8,2,32,0,"exports"],[8,9,32,0],[8,10,32,0,"formatDistance"],[8,24,32,0],[8,27,32,0,"formatDistance"],[8,41,32,0],[9,2,42,0,"exports"],[9,9,42,0],[9,10,42,0,"formatDate"],[9,20,42,0],[9,23,42,0,"formatDate"],[9,33,42,0],[10,2,54,0,"exports"],[10,9,54,0],[10,10,54,0,"formatDateTime"],[10,24,54,0],[10,27,54,0,"formatDateTime"],[10,41,54,0],[11,2,68,0,"exports"],[11,9,68,0],[11,10,68,0,"truncateText"],[11,22,68,0],[11,25,68,0,"truncateText"],[11,37,68,0],[12,2,76,0,"exports"],[12,9,76,0],[12,10,76,0,"generateShareText"],[12,27,76,0],[12,30,76,0,"generateShareText"],[12,47,76,0],[13,2,83,0,"exports"],[13,9,83,0],[13,10,83,0,"isValidQRFormat"],[13,25,83,0],[13,28,83,0,"isValidQRFormat"],[13,43,83,0],[14,2,95,0,"exports"],[14,9,95,0],[14,10,95,0,"calculateYears"],[14,24,95,0],[14,27,95,0,"calculateYears"],[14,41,95,0],[15,2,103,0,"exports"],[15,9,103,0],[15,10,103,0,"formatNumber"],[15,22,103,0],[15,25,103,0,"formatNumber"],[15,37,103,0],[16,2,110,0,"exports"],[16,9,110,0],[16,10,110,0,"getPeriodLabel"],[16,24,110,0],[16,27,110,0,"getPeriodLabel"],[16,41,110,0],[17,2,1,0],[19,2,3,0],[20,0,4,0],[21,0,5,0],[22,2,6,7],[22,11,6,16,"calculateDistance"],[22,28,6,33,"calculateDistance"],[22,29,7,2,"lat1"],[22,33,7,14],[22,35,8,2,"lon1"],[22,39,8,14],[22,41,9,2,"lat2"],[22,45,9,14],[22,47,10,2,"lon2"],[22,51,10,14],[22,53,11,10],[23,4,12,2],[23,10,12,8,"R"],[23,11,12,9],[23,14,12,12],[23,18,12,16],[23,19,12,17],[23,20,12,18],[24,4,13,2],[24,10,13,8,"dLat"],[24,14,13,12],[24,17,13,15,"toRad"],[24,22,13,20],[24,23,13,21,"lat2"],[24,27,13,25],[24,30,13,28,"lat1"],[24,34,13,32],[24,35,13,33],[25,4,14,2],[25,10,14,8,"dLon"],[25,14,14,12],[25,17,14,15,"toRad"],[25,22,14,20],[25,23,14,21,"lon2"],[25,27,14,25],[25,30,14,28,"lon1"],[25,34,14,32],[25,35,14,33],[26,4,15,2],[26,10,15,8,"a"],[26,11,15,9],[26,14,16,4,"Math"],[26,18,16,8],[26,19,16,9,"sin"],[26,22,16,12],[26,23,16,13,"dLat"],[26,27,16,17],[26,30,16,20],[26,31,16,21],[26,32,16,22],[26,35,16,25,"Math"],[26,39,16,29],[26,40,16,30,"sin"],[26,43,16,33],[26,44,16,34,"dLat"],[26,48,16,38],[26,51,16,41],[26,52,16,42],[26,53,16,43],[26,56,17,4,"Math"],[26,60,17,8],[26,61,17,9,"cos"],[26,64,17,12],[26,65,17,13,"toRad"],[26,70,17,18],[26,71,17,19,"lat1"],[26,75,17,23],[26,76,17,24],[26,77,17,25],[26,80,18,6,"Math"],[26,84,18,10],[26,85,18,11,"cos"],[26,88,18,14],[26,89,18,15,"toRad"],[26,94,18,20],[26,95,18,21,"lat2"],[26,99,18,25],[26,100,18,26],[26,101,18,27],[26,104,19,6,"Math"],[26,108,19,10],[26,109,19,11,"sin"],[26,112,19,14],[26,113,19,15,"dLon"],[26,117,19,19],[26,120,19,22],[26,121,19,23],[26,122,19,24],[26,125,20,6,"Math"],[26,129,20,10],[26,130,20,11,"sin"],[26,133,20,14],[26,134,20,15,"dLon"],[26,138,20,19],[26,141,20,22],[26,142,20,23],[26,143,20,24],[27,4,21,2],[27,10,21,8,"c"],[27,11,21,9],[27,14,21,12],[27,15,21,13],[27,18,21,16,"Math"],[27,22,21,20],[27,23,21,21,"atan2"],[27,28,21,26],[27,29,21,27,"Math"],[27,33,21,31],[27,34,21,32,"sqrt"],[27,38,21,36],[27,39,21,37,"a"],[27,40,21,38],[27,41,21,39],[27,43,21,41,"Math"],[27,47,21,45],[27,48,21,46,"sqrt"],[27,52,21,50],[27,53,21,51],[27,54,21,52],[27,57,21,55,"a"],[27,58,21,56],[27,59,21,57],[27,60,21,58],[28,4,22,2],[28,11,22,9,"R"],[28,12,22,10],[28,15,22,13,"c"],[28,16,22,14],[29,2,23,0],[30,2,25,0],[30,11,25,9,"toRad"],[30,16,25,14,"toRad"],[30,17,25,15,"degrees"],[30,24,25,30],[30,26,25,40],[31,4,26,2],[31,11,26,9,"degrees"],[31,18,26,16],[31,22,26,20,"Math"],[31,26,26,24],[31,27,26,25,"PI"],[31,29,26,27],[31,32,26,30],[31,35,26,33],[31,36,26,34],[32,2,27,0],[34,2,29,0],[35,0,30,0],[36,0,31,0],[37,2,32,7],[37,11,32,16,"formatDistance"],[37,25,32,30,"formatDistance"],[37,26,32,31,"km"],[37,28,32,41],[37,30,32,51],[38,4,33,2],[38,8,33,6,"km"],[38,10,33,8],[38,13,33,11],[38,14,33,12],[38,16,33,14],[39,6,34,4],[39,13,34,11],[39,16,34,14,"Math"],[39,20,34,18],[39,21,34,19,"round"],[39,26,34,24],[39,27,34,25,"km"],[39,29,34,27],[39,32,34,30],[39,36,34,34],[39,37,34,35],[39,41,34,39],[40,4,35,2],[41,4,36,2],[41,11,36,9],[41,14,36,12,"km"],[41,16,36,14],[41,17,36,15,"toFixed"],[41,24,36,22],[41,25,36,23],[41,26,36,24],[41,27,36,25],[41,32,36,30],[42,2,37,0],[44,2,39,0],[45,0,40,0],[46,0,41,0],[47,2,42,7],[47,11,42,16,"formatDate"],[47,21,42,26,"formatDate"],[47,22,42,27,"date"],[47,26,42,46],[47,28,42,56],[48,4,43,2],[48,10,43,8,"d"],[48,11,43,9],[48,14,43,12],[48,21,43,19,"date"],[48,25,43,23],[48,30,43,28],[48,38,43,36],[48,41,43,39],[48,45,43,43,"Date"],[48,49,43,47],[48,50,43,48,"date"],[48,54,43,52],[48,55,43,53],[48,58,43,56,"date"],[48,62,43,60],[49,4,44,2],[49,11,44,9,"d"],[49,12,44,10],[49,13,44,11,"toLocaleDateString"],[49,31,44,29],[49,32,44,30],[49,39,44,37],[49,41,44,39],[50,6,45,4,"year"],[50,10,45,8],[50,12,45,10],[50,21,45,19],[51,6,46,4,"month"],[51,11,46,9],[51,13,46,11],[51,19,46,17],[52,6,47,4,"day"],[52,9,47,7],[52,11,47,9],[53,4,48,2],[53,5,48,3],[53,6,48,4],[54,2,49,0],[56,2,51,0],[57,0,52,0],[58,0,53,0],[59,2,54,7],[59,11,54,16,"formatDateTime"],[59,25,54,30,"formatDateTime"],[59,26,54,31,"date"],[59,30,54,50],[59,32,54,60],[60,4,55,2],[60,10,55,8,"d"],[60,11,55,9],[60,14,55,12],[60,21,55,19,"date"],[60,25,55,23],[60,30,55,28],[60,38,55,36],[60,41,55,39],[60,45,55,43,"Date"],[60,49,55,47],[60,50,55,48,"date"],[60,54,55,52],[60,55,55,53],[60,58,55,56,"date"],[60,62,55,60],[61,4,56,2],[61,11,56,9,"d"],[61,12,56,10],[61,13,56,11,"toLocaleDateString"],[61,31,56,29],[61,32,56,30],[61,39,56,37],[61,41,56,39],[62,6,57,4,"year"],[62,10,57,8],[62,12,57,10],[62,21,57,19],[63,6,58,4,"month"],[63,11,58,9],[63,13,58,11],[63,19,58,17],[64,6,59,4,"day"],[64,9,59,7],[64,11,59,9],[64,20,59,18],[65,6,60,4,"hour"],[65,10,60,8],[65,12,60,10],[65,21,60,19],[66,6,61,4,"minute"],[66,12,61,10],[66,14,61,12],[67,4,62,2],[67,5,62,3],[67,6,62,4],[68,2,63,0],[70,2,65,0],[71,0,66,0],[72,0,67,0],[73,2,68,7],[73,11,68,16,"truncateText"],[73,23,68,28,"truncateText"],[73,24,68,29,"text"],[73,28,68,41],[73,30,68,43,"maxLength"],[73,39,68,60],[73,41,68,70],[74,4,69,2],[74,8,69,6,"text"],[74,12,69,10],[74,13,69,11,"length"],[74,19,69,17],[74,23,69,21,"maxLength"],[74,32,69,30],[74,34,69,32],[74,41,69,39,"text"],[74,45,69,43],[75,4,70,2],[75,11,70,9,"text"],[75,15,70,13],[75,16,70,14,"substring"],[75,25,70,23],[75,26,70,24],[75,27,70,25],[75,29,70,27,"maxLength"],[75,38,70,36],[75,39,70,37],[75,42,70,40],[75,47,70,45],[76,2,71,0],[78,2,73,0],[79,0,74,0],[80,0,75,0],[81,2,76,7],[81,11,76,16,"generateShareText"],[81,28,76,33,"generateShareText"],[81,29,76,34,"prisonName"],[81,39,76,52],[81,41,76,54,"description"],[81,52,76,73],[81,54,76,83],[82,4,77,2],[82,11,77,9],[82,14,77,12,"prisonName"],[82,24,77,22],[82,31,77,29,"truncateText"],[82,43,77,41],[82,44,77,42,"description"],[82,55,77,53],[82,57,77,55],[82,60,77,58],[82,61,77,59],[82,116,77,114],[83,2,78,0],[85,2,80,0],[86,0,81,0],[87,0,82,0],[88,2,83,7],[88,11,83,16,"isValidQRFormat"],[88,26,83,31,"isValidQRFormat"],[88,27,83,32,"data"],[88,31,83,44],[88,33,83,55],[89,4,84,2],[89,8,84,6],[90,6,85,4],[90,12,85,10,"parsed"],[90,18,85,16],[90,21,85,19,"JSON"],[90,25,85,23],[90,26,85,24,"parse"],[90,31,85,29],[90,32,85,30,"data"],[90,36,85,34],[90,37,85,35],[91,6,86,4],[91,13,86,11,"parsed"],[91,19,86,17],[91,20,86,18,"type"],[91,24,86,22],[91,28,86,26,"parsed"],[91,34,86,32],[91,35,86,33,"prison_id"],[91,44,86,42],[92,4,87,2],[92,5,87,3],[92,6,87,4],[92,12,87,10],[93,6,88,4],[93,13,88,11],[93,18,88,16],[94,4,89,2],[95,2,90,0],[97,2,92,0],[98,0,93,0],[99,0,94,0],[100,2,95,7],[100,11,95,16,"calculateYears"],[100,25,95,30,"calculateYears"],[100,26,95,31,"startYear"],[100,35,95,48],[100,37,95,50,"endYear"],[100,44,95,66],[100,46,95,76],[101,4,96,2],[101,8,96,6],[101,9,96,7,"endYear"],[101,16,96,14],[101,18,96,16],[101,25,96,23],[101,29,96,27,"Date"],[101,33,96,31],[101,34,96,32],[101,35,96,33],[101,36,96,34,"getFullYear"],[101,47,96,45],[101,48,96,46],[101,49,96,47],[101,52,96,50,"startYear"],[101,61,96,59],[102,4,97,2],[102,11,97,9,"endYear"],[102,18,97,16],[102,21,97,19,"startYear"],[102,30,97,28],[103,2,98,0],[105,2,100,0],[106,0,101,0],[107,0,102,0],[108,2,103,7],[108,11,103,16,"formatNumber"],[108,23,103,28,"formatNumber"],[108,24,103,29,"num"],[108,27,103,40],[108,29,103,50],[109,4,104,2],[109,11,104,9,"num"],[109,14,104,12],[109,15,104,13,"toLocaleString"],[109,29,104,27],[109,30,104,28],[109,37,104,35],[109,38,104,36],[110,2,105,0],[112,2,107,0],[113,0,108,0],[114,0,109,0],[115,2,110,7],[115,11,110,16,"getPeriodLabel"],[115,25,110,30,"getPeriodLabel"],[115,26,110,31,"years"],[115,31,110,46],[115,33,110,56],[116,4,111,2],[116,8,111,6,"years"],[116,13,111,11],[116,14,111,12,"length"],[116,20,111,18],[116,25,111,23],[116,26,111,24],[116,28,111,26],[116,35,111,33],[116,44,111,42],[117,4,112,2],[117,8,112,6,"years"],[117,13,112,11],[117,14,112,12,"length"],[117,20,112,18],[117,25,112,23],[117,26,112,24],[117,28,112,26],[117,35,112,33,"years"],[117,40,112,38],[117,41,112,39],[117,42,112,40],[117,43,112,41],[117,44,112,42,"toString"],[117,52,112,50],[117,53,112,51],[117,54,112,52],[118,4,113,2],[118,11,113,9],[118,14,113,12,"years"],[118,19,113,17],[118,20,113,18],[118,21,113,19],[118,22,113,20],[118,26,113,24,"years"],[118,31,113,29],[118,32,113,30,"years"],[118,37,113,35],[118,38,113,36,"length"],[118,44,113,42],[118,47,113,45],[118,48,113,46],[118,49,113,47],[118,51,113,49],[119,2,114,0],[120,0,114,1],[120,3]],"functionMap":{"names":["<global>","calculateDistance","toRad","formatDistance","formatDate","formatDateTime","truncateText","generateShareText","isValidQRFormat","calculateYears","formatNumber","getPeriodLabel"],"mappings":"AAA;OCK;CDiB;AEE;CFE;OGK;CHK;OIK;CJO;OKK;CLS;OMK;CNG;OOK;CPE;OQK;CRO;OSK;CTG;OUK;CVE;OWK"},"hasCjsExports":false},"type":"js/module"}]}